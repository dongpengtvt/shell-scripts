#今天突发奇想，对一个DNS域名查询脚本做了一个魔改
#这是一个基于host命令的简单的脚本，普通的一次性操作是host+域名+server，这里做成了脚本执行。
#假如有很多个NS和很多个域名需要验证查询的话，一条一条的输入有点麻烦。
#这个脚本的功能就是把名称服务器和域名各放一个文件，用命令去调用遍历他们，每条域名逐个在名称服务器上请求查询。

[root@host1 /var/named]# cat ipv6zonecheck.sh
#!/bin/bash

for i in `cat /root/dns.txt| awk '{print $1}'`
do
        host -6 $1 $i | grep "has IPv6 address"

# The special shell parameter $? contains the exit code from the last command run. 
# Every command you run from the shell reports a numeric status back to the shell when it finishes running; 
# in general, a value of 0 means the command succeeded, and a nonzero value means it failed.
# And the != operator means 'is not equal to', so [ $? != 0 ] is checking to see if $? is not equal to zero.


        if [ "$?" != "0" ];then
                echo "$i ------resolve----->>>>failed!"
        else
                        echo "$i ------resolve----->>>>OK!"
        fi

done
[root@host1 /var/named]# cat /root/dns.txt
192.168.0.100
192.168.0.200
192.168.0.203
2001:250:4000:2000::100
2001:250:4000:2000::200
2001:250:4000:2000::203
[root@host1 /var/named]# cat zonecheck.sh
#!/bin/bash

Time=$(date '+%Y-%m-%d %H:%M:%S')

for i in `cat /root/dns.txt| awk '{print $1}'`
do
        host $1 $i | grep 'has address'
        if [ "$?" != "0" ];then
                echo "$i ------resolve----->failed!"
        else
                echo "$i ------resolve----->OK!"
        fi

done
[root@host1 /var/named]# 

#----------------------------------------------------
#在这里又突发奇想，还可以将域名也放进一个文件中，脚本调用就省去逐个输入了。
#!/bin/bash

for j in `cat /root/yuming | awk '{print $1}'`
do
  for i in `cat /root/nameserver | awk '{print $1}'`
  do
        host -6 $j $i | grep "has IPv6 address"
        if [ "$?" != "0" ];then
                echo "$i ------resolve----->Failed!"
        else
                echo "$i ------resolve----->Success!"
        fi
  done
done
#----------------------------------------------------
#在这里加了两个变量，将/root/yuming文件和/root/nameserver文件改成了变量。
#!/bin/bash

for j in $(cat /root/yuming | awk '{print $1}')
do
  for i in `cat /root/nameserver | awk '{print $1}'`
  do
        host -6 $j $i | grep "has IPv6 address"
        if [ "$?" != "0" ];then
                echo "$i ------resolve----->Failed!"
        else
                echo "$i ------resolve----->Success!"
        fi
  done
done
#-----------------------------------------------------
#头一次玩脚本，边搜索边测试，所以这里定义两个变量的时候，尝试了不同的语法和字符。
#看了别人的方法，还是这种定义规范一些。
[root@host1 /var/named]# vi ipv6zonecheck.sh 
#!/bin/bash

for j in $(cat /root/yuming | awk '{print $1}')
do
  for i in $(cat /root/nameserver | awk '{print $1}')
  do
        host -6 $j $i | grep "has IPv6 address"
        if [ "$?" != "0" ];then
                echo "$i ------resolve----->Failed!"
        else
                echo "$i ------resolve----->Success!"
        fi
  done
done
